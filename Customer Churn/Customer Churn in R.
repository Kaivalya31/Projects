                             
#Installing and loading the package
library(plyr)
library(ggplot2)
library(caret)
library(randomForest)
library(party)
library(MASS)
library(summarytools)
library(funModeling)

#Reading the dataset file and checking the structure using str()
Telco = read.csv("C:\\Users\\kaiva\\Downloads\\WA_Fn-UseC_-Telco-Customer-Churn.csv")
View(Telco)
#analyse the dataset
str(Telco)
summary(Telco)
head(Telco)
tail(Telco)
cor(Telco$tenure,Telco$TotalCharges)
plot_num(Telco)
describe(Telco)
##pre processing ##
#Check the number of missing values in each column
sapply(Telco, function(x) sum(is.na(x)))
Telco$TotalCharges=ifelse(is.na(Telco$TotalCharges),ave(Telco$TotalCharges, FUN=function(x) mean(x, na.rm=TRUE)),Telco$TotalCharges)
Telco$SeniorCitizen=factor(Telco$SeniorCitizen, levels=c("0","1"), 
                           labels=c("No","Yes"))
Telco$MultipleLines=as.factor(mapvalues(Telco$MultipleLines, 
                                        from=c("No phone service"),
                                        to=c("No")))
#Removing the columns we do not require
Telco$customerID <- NULL
#### Logistic Regression ####
#We will split the dataset into Train and Test dataset
trn<- createDataPartition(Telco$Churn,p=0.7,list=FALSE)
set.seed(2017)
train<- Telco[trn,]
test<- Telco[-trn,]
dim(train)
dim(test)
#Now, we will try to fit the model within the glm() for logistic regression
L_Model <- glm(as.factor(Churn) ~ .,family=binomial(link="logit"),data=train)
print(summary(L_Model))
#Analyzing the model further on few more features
anova(L_Model, test="Chisq")
#Now we will evaluate the predictive ability  of the model
test$Churn <- as.character(test$Churn)
test$Churn[test$Churn=="No"] <- "0"
test$Churn[test$Churn=="Yes"] <- "1"
FitResult <- predict(L_Model,newdata=test,type='response')
FitResult <- ifelse(FitResult > 0.5,1,0)
MisClassificationError <- mean(FitResult != test$Churn)
print(paste('Accuracy of Logistic Regression',1-MisClassificationError))
#Lets make a confusion matrix for the logistic regression performed above
print("Logistic Regression Confusion Matrix"); table(test$Churn, FitResult > 0.5)
exp(cbind(OR=coef(L_Model), confint(L_Model)))

#Change "No internet service" to "No" for six columns, they are: 
#"OnlineSecurity", "OnlineBackup", "DeviceProtection", "TechSupport", "streamingTV", "streamingMovies".
cols_recode1 <- c(10:15)
for(i in 1:ncol(Telco[,cols_recode1])) {
  Telco[ ,cols_recode1][ ,i] <- as.factor(mapvalues
                                          (Telco[ ,cols_recode1][,i], from =c("No internet service"), to=c("No")))
}

#Change "No phone service" to "No" for column "MultipleLines"
Telco$MultipleLines <- as.factor(mapvalues(Telco$MultipleLines, 
                                           from=c("No phone service"),
                                           to=c("No")))

#The minimum tenure is 1 month and maximum tenure is 72 months, we can group them into five tenure groups: 
#"0-12 Month", "12-24 Month", "24-48 Months", "48-60 Month", "> 60 Month".
min(Telco$tenure); max(Telco$tenure)
group_tenure <- function(tenure){
  if (tenure >= 0 & tenure <= 12){
    return('0-12 Month')
  }else if(tenure > 12 & tenure <= 24){
    return('12-24 Month')
  }else if (tenure > 24 & tenure <= 48){
    return('24-48 Month')
  }else if (tenure > 48 & tenure <=60){
    return('48-60 Month')
  }else if (tenure > 60){
    return('> 60 Month')
  }
}
Telco$tenure_group <- sapply(Telco$tenure,group_tenure)
Telco$tenure_group <- as.factor(Telco$tenure_group)

#Change the values in column "SeniorCitizen" from 0 or 1 to "No" or "Yes".
Telco$SeniorCitizen <- as.factor(mapvalues(Telco$SeniorCitizen,
                                           from=c("0","1"),
                                           to=c("No", "Yes")))

#Remove the columns we do not need for the analysis:
Telco$customerID <- NULL
Telco$tenure <- NULL

#The Monthly Charges and Total Charges are correlated. So one of them will be removed from the model. We remove Total Charges.
Telco$TotalCharges <- NULL

## Bar plots of categorical variables
p1 <- ggplot(Telco, aes(x=gender)) + ggtitle("Gender") + xlab("Gender") +
  geom_bar(aes(y = 100*(..count..)/sum(..count..)), width = 0.5) + ylab("Percentage") + coord_flip() + theme_minimal()
p2 <- ggplot(Telco, aes(x=SeniorCitizen)) + ggtitle("Senior Citizen") + xlab("Senior Citizen") + 
  geom_bar(aes(y = 100*(..count..)/sum(..count..)), width = 0.5) + ylab("Percentage") + coord_flip() + theme_minimal()
p3 <- ggplot(Telco, aes(x=Partner)) + ggtitle("Partner") + xlab("Partner") + 
  geom_bar(aes(y = 100*(..count..)/sum(..count..)), width = 0.5) + ylab("Percentage") + coord_flip() + theme_minimal()
p4 <- ggplot(Telco, aes(x=Dependents)) + ggtitle("Dependents") + xlab("Dependents") +
  geom_bar(aes(y = 100*(..count..)/sum(..count..)), width = 0.5) + ylab("Percentage") + coord_flip() + theme_minimal()
grid.arrange(p1, p2, p3, p4, ncol=2)

p5 <- ggplot(Telco, aes(x=PhoneService)) + ggtitle("Phone Service") + xlab("Phone Service") +
  geom_bar(aes(y = 100*(..count..)/sum(..count..)), width = 0.5) + ylab("Percentage") + coord_flip() + theme_minimal()
p6 <- ggplot(Telco, aes(x=MultipleLines)) + ggtitle("Multiple Lines") + xlab("Multiple Lines") + 
  geom_bar(aes(y = 100*(..count..)/sum(..count..)), width = 0.5) + ylab("Percentage") + coord_flip() + theme_minimal()
p7 <- ggplot(Telco, aes(x=InternetService)) + ggtitle("Internet Service") + xlab("Internet Service") + 
  geom_bar(aes(y = 100*(..count..)/sum(..count..)), width = 0.5) + ylab("Percentage") + coord_flip() + theme_minimal()
p8 <- ggplot(Telco, aes(x=OnlineSecurity)) + ggtitle("Online Security") + xlab("Online Security") +
  geom_bar(aes(y = 100*(..count..)/sum(..count..)), width = 0.5) + ylab("Percentage") + coord_flip() + theme_minimal()
grid.arrange(p5, p6, p7, p8, ncol=2)

p9 <- ggplot(Telco, aes(x=OnlineBackup)) + ggtitle("Online Backup") + xlab("Online Backup") +
  geom_bar(aes(y = 100*(..count..)/sum(..count..)), width = 0.5) + ylab("Percentage") + coord_flip() + theme_minimal()
p10 <- ggplot(Telco, aes(x=DeviceProtection)) + ggtitle("Device Protection") + xlab("Device Protection") + 
  geom_bar(aes(y = 100*(..count..)/sum(..count..)), width = 0.5) + ylab("Percentage") + coord_flip() + theme_minimal()
p11 <- ggplot(Telco, aes(x=TechSupport)) + ggtitle("Tech Support") + xlab("Tech Support") + 
  geom_bar(aes(y = 100*(..count..)/sum(..count..)), width = 0.5) + ylab("Percentage") + coord_flip() + theme_minimal()
p12 <- ggplot(Telco, aes(x=StreamingTV)) + ggtitle("Streaming TV") + xlab("Streaming TV") +
  geom_bar(aes(y = 100*(..count..)/sum(..count..)), width = 0.5) + ylab("Percentage") + coord_flip() + theme_minimal()
grid.arrange(p9, p10, p11, p12, ncol=2)

p13 <- ggplot(Telco, aes(x=StreamingMovies)) + ggtitle("Streaming Movies") + xlab("Streaming Movies") +
  geom_bar(aes(y = 100*(..count..)/sum(..count..)), width = 0.5) + ylab("Percentage") + coord_flip() + theme_minimal()
p14 <- ggplot(Telco, aes(x=Contract)) + ggtitle("Contract") + xlab("Contract") + 
  geom_bar(aes(y = 100*(..count..)/sum(..count..)), width = 0.5) + ylab("Percentage") + coord_flip() + theme_minimal()
p15 <- ggplot(Telco, aes(x=PaperlessBilling)) + ggtitle("Paperless Billing") + xlab("Paperless Billing") + 
  geom_bar(aes(y = 100*(..count..)/sum(..count..)), width = 0.5) + ylab("Percentage") + coord_flip() + theme_minimal()
p16 <- ggplot(Telco, aes(x=PaymentMethod)) + ggtitle("Payment Method") + xlab("Payment Method") +
  geom_bar(aes(y = 100*(..count..)/sum(..count..)), width = 0.5) + ylab("Percentage") + coord_flip() + theme_minimal()
p17 <- ggplot(Telco, aes(x=tenure_group)) + ggtitle("Tenure Group") + xlab("Tenure Group") +
  geom_bar(aes(y = 100*(..count..)/sum(..count..)), width = 0.5) + ylab("Percentage") + coord_flip() + theme_minimal()
grid.arrange(p13, p14, p15, p16, p17, ncol=2)

#Choosing best fields to build our decision tree model using
#Chi-Squared Test
Cor1 = table(Telco$gender, Telco$Churn)
print(chisq.test(Cor1))
Cor1 = table(Telco$tenure_group, Telco$Churn)
print(chisq.test(Cor1))
Cor1 = table(Telco$PaperlessBilling, Telco$Churn)
print(chisq.test(Cor1))
Cor1 = table(Telco$InternetService, Telco$Churn)
print(chisq.test(Cor1))
Cor1 = table(Telco$Contract, Telco$Churn)
print(chisq.test(Cor1))
Cor1 = table(Telco$TechSupport, Telco$Churn)
print(chisq.test(Cor1))
Cor1 = table(Telco$DeviceProtection, Telco$Churn)
print(chisq.test(Cor1))

                       #Decision Tree Prediction
#Splitting the dataset 
library(caTools)
set.seed(57)
split = sample.split(Telco, SplitRatio = .8)
train = subset(Telco, split == TRUE)
test= subset(Telco, split == FALSE)

#For illustration purpose, we are going to use only three variables, they are "Contract", "tenure_group" and "InternetService".
train$Churn = factor(train$Churn, levels = c("Yes", "No"), 
                     labels = c(1, 0))
train$InternetService = as.factor(ifelse(train$InternetService == 'No', 
                                         0, 1))
train$Contract = factor(train$Contract, levels = c("Month-to-month", "One year", "Two year"), 
                        labels = c(0, 1, 2))
train$tenure_group = factor(train$tenure_group, 
                            levels = c('0-12 Month', '12-24 Month', '24-48 Month', '48-60 Month', '>60'), 
                            labels = c(1, 2, 3, 4, 5))

test$Churn = factor(test$Churn, levels = c("Yes", "No"), 
                    labels = c(1, 0))
test$InternetService = as.factor(ifelse(test$InternetService == 'No', 
                                        0, 1))
test$Contract = factor(test$Contract, levels = c("Month-to-month", "One year", "Two year"), 
                       labels = c(0, 1, 2))
test$tenure_group = factor(test$tenure_group, 
                           levels = c('0-12 Month', '12-24 Month', '24-48 Month', '48-60 Month', '>60'), 
                           labels = c(1, 2, 3, 4, 5))
tree <- ctree(Churn~Contract+tenure_group+InternetService, train)
plot(tree)

#Out of three variables we use, Contract is the most important variable to predict customer churn or not churn.
#If a customer in a one-year contract and not using PaperlessBilling, then this customer is unlikely to churn.
#On the other hand, if a customer is in a month-to-month contract, and in the tenure group of 0-12 months, and using PaperlessBilling, then this customer is more likely to churn. 
pred_tree <- predict(tree, test)
print("Confusion Matrix for Decision Tree")
table(Predicted = pred_tree, Actual = test$Churn)

p1 <- predict(tree, train)
tab1 <- table(Predicted = p1, Actual = train$Churn)
tab2 <- table(Predicted = pred_tree, Actual = test$Churn)
print(paste('Decision Tree Accuracy is:- ',sum(diag(tab2))/sum(tab2)))

## Random Forest
set.seed(2017)
rfModel <- randomForest(as.factor(Churn) ~., data = train)
print(rfModel)
## Error rate for Random Forest Model
plot(rfModel)
t <- tuneRF(train[, -18], train[, 18], stepFactor = 0.5, plot = TRUE, ntreeTry = 200, trace = TRUE, improve = 0.05)
## Fit the Random Forest Model again
rfModel_new <- randomForest(as.factor(Churn) ~., data = train, ntree = 200, mtry = 2, importance = TRUE, proximity = TRUE)
print(rfModel_new)
## Random Forest Feature Importance
varImpPlot(rfModel_new, sort=T, n.var = 10, main = 'Top 10 Feature Importance')


# Prediction and confusion matrix 
pred_rf <- predict(rfModel, test)
#confusionMatrix(pred_rf,test$Churn)

# Make Predictions and Confusion Matrix again
pred_rf_new <- predict(rfModel_new, test)
#confusionMatrix(pred_rf_new,test$Churn)

